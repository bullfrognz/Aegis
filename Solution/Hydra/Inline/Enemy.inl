//
//  Diploma of Interactive Gaming
//  Game Development Faculty
//  Media Design School
//  Auckland
//  New Zealand
//
//  (c) 2011 Media Design School
//
//  File Name   :   Enemy.inl
//  Description :  
//  Author      :   Bryce Booth
//  Mail        :   bryce.booth@mediadesign.school.nz
//

// Library Includes

// Local Includes

// Implementation


/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

void
CEnemy::SetDefaultHealth(float _fDefaultHealth)
{
	m_fToBeDefaultHealth = _fDefaultHealth;
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

float
CEnemy::GetDefaultHealth() const
{
	return(m_fDefaultHealth);
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

void
CEnemy::SetDefaultMovementVelocity(float _fMovementVelocity)
{
	m_fToBeDefaultMovementVelocity = _fMovementVelocity;
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

float
CEnemy::GetDefaultMovementVelocity() const
{
	return(m_fDefaultMovementVelocity);
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

bool
CEnemy::IsAlive() const
{
	return (m_bAlive);
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

void
CEnemy::DecrementHealth(float _fValue)
{
	m_fHealth -= _fValue;
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

unsigned int
CEnemy::GetBountyValue() const
{
	return (m_uiBountyValue);
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

float
CEnemy::GetLifeTimeElapsed() const
{
	return (m_fLifeTimeElapsed);
}







/*---------------------------------------------------------------------------------------------------------------------------
*
* This function
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

float
CEnemy::GetHealth() const
{
	return (m_fHealth);
}








/*---------------------------------------------------------------------------------------------------------------------------
*
* Sets the critical colour timer for the enemy.
*
* @author Bryce Booth
* _fTimer	The amount of time the colour will last.
*
*---------------------------------------------------------------------------------------------------------------------------*/

void
CEnemy::SetCriticalColourTimer(float _fTimer)
{
	m_fCriticalColourTimer = _fTimer;
}







/*---------------------------------------------------------------------------------------------------------------------------
*
* Returns the critical timer value.
*
* @author Bryce Booth
* m_fCriticalColourTimer	The timer.
*
*---------------------------------------------------------------------------------------------------------------------------*/

float
CEnemy::GetCriticalColourTimer() const
{
	return (m_fCriticalColourTimer);
}






/*---------------------------------------------------------------------------------------------------------------------------
*
* Returns the enemy time.
*
* @author Bryce Booth
*
*---------------------------------------------------------------------------------------------------------------------------*/

const char*
CEnemy::GetType() const
{
	return(m_kcpEnemyType);
}